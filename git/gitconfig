[core]
    editor=vim
[user]
    name = Muhammed Haque
[diff]
    tool = vimdiff
[merge]
    tool = vimdiff
[alias]
    a=add
    aa=add -A
    ac="!f() {                                                                                                                              \
            local message=\"$1\";                                                                                                           \
            shift;                                                                                                                          \
            if [ $# -eq 0 ];                                                                                                                \
            then                                                                                                                            \
                git aa;                                                                                                                     \
            else                                                                                                                            \
                git a $@;                                                                                                                   \
            fi;                                                                                                                             \
            git cc \"$message\";                                                                                                            \
        }; f"
    acc="!f() {                                                                                                                             \
            local message=\"$1\";                                                                                                           \
            shift;                                                                                                                          \
            if [ $# -eq 0 ];                                                                                                                \
            then                                                                                                                            \
                git aa;                                                                                                                     \
            else                                                                                                                            \
                git a $@;                                                                                                                   \
            fi;                                                                                                                             \
            git c \"$message\";                                                                                                             \
        }; f"
    acf="!f() {                                                                                                                             \
        git acc \"$@\";                                                                                                                     \
        git pf;                                                                                                                             \
    }; f"
    as="!f() {                                                                                                                              \
            if [ $# -eq 0 ];                                                                                                                \
            then                                                                                                                            \
                git aa;                                                                                                                     \
            else                                                                                                                            \
                git a $*;                                                                                                                   \
            fi;                                                                                                                             \
            git s;                                                                                                                          \
        }; f"
    asd="!f() {                                                                                                                             \
            git as;                                                                                                                         \
            git dc;                                                                                                                         \
        }; f"
    bbg="!f() {                                                                                                                             \
            git b $(git bg $1);                                                                                                             \
        }; f"
    bdg="!f() {                                                                                                                             \
            git bd $(git bg $1);                                                                                                            \
        }; f"
    bg="!f() {                                                                                                                              \
            git branch                                                                                                                      \
            | grep $1;                                                                                                                      \
        }; f"
    bm=!git b master
# switch to nth last branch, as shown by git b
    bn="!f() {                                                                                                                              \
            git b $(git branch -a --color=never | head -n${1} | tail -n1);                                                                  \
        }; f"
# commit and push
    cc="!f() {                                                                                                                              \
            git c \"$1\";                                                                                                                   \
            git pp;                                                                                                                         \
        }; f"
    cl=clean -f -d
    clo="!f() {                                                                                                                             \
            find . -name \\*.orig | xargs rm;                                                                                               \
        }; f"
    co=checkout
    cp=cherry-pick
# redo commit
    cr="!f() {                                                                                                                              \
        message=$(git log -1 --pretty=%B);                                                                                                  \
        git reset @^;                                                                                                                       \
        git aa;                                                                                                                             \
        git commit -m \"$message\";                                                                                                         \
        git pf;                                                                                                                             \
    }; f"
    d=difftool
# diff blame filename line
    db="!f() {                                                                                                                              \
            local rev=$(git blame $1 -L $2,$2 | cut -d' ' -f1);                                                                             \
            echo $rev;                                                                                                                      \
            git df $1 $rev;                                                                                                                 \
        }; f"
    dc=!git d --cached
# diff a commit against previous
    dd="!f() {                                                                                                                              \
            local hash=\"$1\";                                                                                                              \
            shift;                                                                                                                          \
            git d \"$hash^\" \"$hash\" \"$@\";                                                                                              \
        }; f"
# diff a file
    df="!f() {                                                                                                                              \
            git dfh $1 $2 n;                                                                                                                \
        }; f"
# keep diffing a file
    dfh="!f() {                                                                                                                             \
            prev=$(git rev-list $(git rev-list @ | tail -n 1)..$2^ $1 | head -n 1);                                                         \
            echo $prev;                                                                                                                     \
            git d -y $prev:$1 $2:$1;                                                                                                        \
            if [ \"$3\" = \"\" ];                                                                                                           \
            then                                                                                                                            \
                read -n1 -p 'press q to quit, or any other key to continue ' q;                                                             \
                if [ \"$q\" != \"q\" ];                                                                                                     \
                then                                                                                                                        \
                    git dfh $1 $prev;                                                                                                       \
                else                                                                                                                        \
                    echo;                                                                                                                   \
                fi;                                                                                                                         \
            fi;                                                                                                                             \
        }; f"
# diff names only
    dn="!f() {                                                                                                                              \
            git diff --name-only \"$1^!\";                                                                                                  \
        }; f"
    f=fetch --all --prune
# grep files
    g="!f() {                                                                                                                               \
            git rev-list --all -- \"$2\"  | xargs git grep \"$1\";                                                                          \
        }; f"
# pretty log
    l=!git ll -15
# log for one file
    lf=!git ll --follow
# pretty log full message
    la=log --graph --pretty=format:'%C(blue)%<(15)%cr%Creset %C(yellow)%h%Creset %C(red)%<(25)%ce%Creset %<(15)%n%C(bold green)%s%Creset'
    ll=log --graph --pretty=format:'%C(blue)%<(15)%cr%Creset %C(yellow)%h%Creset %C(red)%<(25)%ce%Creset %C(bold green)%<(95,trunc)%s%Creset'
    lm=!git ll --author=$(git config user.email)
    m=merge
    mm=merge master
    ms=merge staging
    mt=mergetool
    p="!f(){                                                                                                                                \
            [ \"$1\" = \"\" ] && branch=$(git symbolic-ref --short HEAD) || branch=$1;                                                      \
            git pull origin $branch;                                                                                                        \
        }; f"
    pa="!f(){                                                                                                                               \
            local current=$(git symbolic-ref --short HEAD);                                                                                 \
            git branch -r                                                                                                                   \
            | grep -v '\\->'                                                                                                                \
            | while read remote;                                                                                                            \
            do                                                                                                                              \
                git b ${remote#origin/};                                                                                                    \
                git p;                                                                                                                      \
            done;                                                                                                                           \
            git b $current;                                                                                                                 \
        }; f"
    pf="!f(){                                                                                                                               \
            git push --force origin $(git symbolic-ref --short HEAD);                                                                       \
        }; f"
    pm=pull origin master
    pp="!f(){                                                                                                                               \
            git push origin $(git symbolic-ref --short HEAD);                                                                               \
        }; f"
    r="!f(){                                                                                                                                \
            git reset --hard origin/$(git symbolic-ref --short HEAD);                                                                       \
        }; f"
    rcl="!f() {                                                                                                                             \
            git r;                                                                                                                          \
            git cl;                                                                                                                         \
        }; f"
    rh=reset --hard @
    s=status
    sd="!f() {                                                                                                                              \
            git s;                                                                                                                          \
            git d;                                                                                                                          \
        }; f"
    sl=stash list
    smi=submodule init
    sms=submodule status
    smu=submodule update
    sp=stash pop
    ss=stash show -p
    st=stash
    stb="!f() {                                                                                                                             \
            git st;                                                                                                                         \
            git b $1;                                                                                                                       \
        }; f"
# last working day logs for current user on all branches
    su="!f() {                                                                                                                              \
            git f;                                                                                                                          \
            if [ $(date +%u) -eq 1 ];                                                                                                       \
            then                                                                                                                            \
                git lm --branches=* --since=\"3 day\";                                                                                      \
            else                                                                                                                            \
                git lm --branches=* --since=\"1 day\";                                                                                      \
            fi;                                                                                                                             \
        }; f"
    uc=reset @^
[include]
    path=~/.gitconfig_platform
    path=~/.gitconfig_type
