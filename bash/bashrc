alias gti=git
alias la='ls -a'
alias ll='ls -l'
alias ne='node -e'
alias vom=vim

alias npmi='rm -rf node_modules; npm install'
alias yarni='rm -rf node_modules; yarn'
alias yarnt='yarn test'
alias ysr='yarn start --reset-cache'

alias adbd='adb devices'
alias adbl='adb logcat'
alias adbll='adb logcat -T1 | grep "ReactNativeJS\\|System\\."'
alias adbr='adb reverse tcp:8081 tcp:8081'
alias rnra='react-native run-android'
alias rrnra='adb uninstall $(grep package android/app/src/main/AndroidManifest.xml | cut -d\" -f2); rnra'

alias resource='source ~/.bashrc'

case $(uname -s) in
    "Linux")
        if [ -d '/mnt/c/Windows/System32' ]
        then
            alias open='/mnt/c/Windows/System32/cmd.exe /c start'
            alias pbcopy='/mnt/c/Windows/System32/clip.exe'
            alias pbpaste='/mnt/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe -command "Get-Clipboard"'
        else
            alias open='xdg-open'
            alias pbcopy='xclip -selection clipboard'
            alias pbpaste='xsel -b'
        fi
        ;;
    "Darwin")
        alias tac='tail -r'
        ;;
esac

ssh-port-forward() {
    local port=$1
    shift
    ssh -qL ${port}:127.0.0.1:${port} $@
}

gitb() {
    for a in $@
    do
        git $a
    done
}

# for when you type `gi tstatus` instead of `git status`
gi() {
    local first=$1
    shift
    git ${first:1} $@
}

line() {
    if [ $# -eq 2 ]
    then
        sed "$1q;d" "$2"
    else
        sed "$1q;d"
    fi
}

export HISTCONTROL=ignoreboth:erasedups

F_NORMAL=0
F_BOLD=1
F_UNDER=4

FG_BLACK=30
FG_RED=31
FG_GREEN=32
FG_YELLOW=33
FG_BLUE=34
FG_PURPLE=35
FG_CYAN=36
FG_WHITE=37

BG_BLACK=40
BG_RED=41
BG_GREEN=42
BG_YELLOW=43
BG_BLUE=44
BG_PURPLE=45
BG_CYAN=46
BG_WHITE=47

END_COLOURS='\[\e[m\]'

colour() {
    echo "\[\e[$1;$2;$3m\]"
}

if [ "$(whoami)" == "root" ]
then
    SHLVL_C=$(colour $F_BOLD $FG_YELLOW $BG_BLACK)
    USER_HOST_C=$(colour $F_BOLD $FG_RED $BG_BLACK)
    PATH_C=$(colour $F_NORMAL $FG_CYAN $BG_BLACK)

    VIM_BASH_C=$(colour $F_BOLD $FG_RED $BG_BLACK)
else
    SHLVL_C=$(colour $F_BOLD $FG_RED $BG_BLACK)
    USER_HOST_C=$(colour $F_BOLD $FG_GREEN $BG_BLACK)
    PATH_C=$(colour $F_BOLD $FG_BLUE $BG_BLACK)

    VIM_BASH_C=$(colour $F_NORMAL $FG_YELLOW $BG_BLACK)
fi

export OLD_PS1="$PS1"
if [ "$FROM_VIM" == "" ]
then
    if [ $SHLVL -ne 1 ]
    then
        SHLVL_PART="${SHLVL_C}[${SHLVL}]"
    fi
    export PS1="${SHLVL_PART}${USER_HOST_C}\u@\h${PATH_C}\w${END_COLOURS}\$ "
else
    export PS1="${VIM_BASH_C}bash${END_COLOURS}\$ "
fi

